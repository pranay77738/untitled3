[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\yjasw\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\yjasw\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Oracle Corporation Java 11.0.13)
[debug]       Load.loadUnit: plugins took 97.1802ms
[debug]       Load.loadUnit: defsScala took 0.332ms
[debug] [Loading] Scanning directory C:\Users\yjasw\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\yjasw\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.723 ms
[debug]           Load.resolveProject(global-plugins) took 64.7006ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\yjasw\.sbt\1.0\plugins, plugins: List(<none>))) took 103.597599ms
[debug] [Loading] Done in C:\Users\yjasw\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 123.232199ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.348ms
[debug]     Load.loadUnit(file:/C:/Users/yjasw/.sbt/1.0/plugins/, ...) took 231.338999ms
[debug]   Load.apply: load took 410.1537ms
[debug]   Load.apply: resolveProjects took 6.0244ms
[debug]   Load.apply: finalTransforms took 63.8637ms
[debug]   Load.apply: config.delegates took 8.8437ms
[debug]   Load.apply: Def.make(settings)... took 525.522901ms
[debug]   Load.apply: structureIndex took 133.2204ms
[debug]   Load.apply: mkStreams took 3.081001ms
[info] loading global plugins from C:\Users\yjasw\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3283.2452ms
[debug]           Load.loadUnit: plugins took 35.771ms
[debug]           Load.loadUnit: defsScala took 0.0071ms
[debug] [Loading] Scanning directory C:\Users\yjasw\PycharmProjects\Scala-learnings\untitled3\project
[debug]             Load.loadUnit: mkEval took 13.1548ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\yjasw\PycharmProjects\Scala-learnings\untitled3\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.573299 ms
[info] loading settings for project untitled3-build from idea.sbt ...
[debug]               Load.resolveProject(untitled3-build) took 3.1179ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled3-build, base: C:\Users\yjasw\PycharmProjects\Scala-learnings\untitled3\project, plugins: List(<none>))) took 5.248601ms
[debug] [Loading] Done in C:\Users\yjasw\PycharmProjects\Scala-learnings\untitled3\project, returning: (untitled3-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3008.494999ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.854301ms
[debug]         Load.loadUnit(file:/C:/Users/yjasw/PycharmProjects/Scala-learnings/untitled3/project/, ...) took 3050.5282ms
[debug]       Load.apply: load took 3052.5464ms
[debug]       Load.apply: resolveProjects took 0.092699ms
[debug]       Load.apply: finalTransforms took 8.681901ms
[debug]       Load.apply: config.delegates took 0.436401ms
[debug]       Load.apply: Def.make(settings)... took 82.1662ms
[debug]       Load.apply: structureIndex took 41.4175ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Users\yjasw\PycharmProjects\Scala-learnings\untitled3\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6407.694899ms
[debug]     Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\yjasw\PycharmProjects\Scala-learnings\untitled3
[debug]       Load.loadUnit: mkEval took 0.913399ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\yjasw\PycharmProjects\Scala-learnings\untitled3, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.166499 ms
[info] loading settings for project untitled3 from build.sbt ...
[debug]         Load.resolveProject(untitled3) took 26.0265ms
[debug]       Load.loadTransitive: finalizeProject(Project(id untitled3, base: C:\Users\yjasw\PycharmProjects\Scala-learnings\untitled3, plugins: List(<none>))) took 29.279301ms
[debug] [Loading] Done in C:\Users\yjasw\PycharmProjects\Scala-learnings\untitled3, returning: (untitled3)
[debug]     Load.loadUnit: loadedProjectsRaw took 1214.0279ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.125ms
[debug]   Load.loadUnit(file:/C:/Users/yjasw/PycharmProjects/Scala-learnings/untitled3/, ...) took 7631.4526ms
[debug] Load.apply: load took 7633.1869ms
[debug] Load.apply: resolveProjects took 0.0946ms
[debug] Load.apply: finalTransforms took 22.393301ms
[debug] Load.apply: config.delegates took 0.2478ms
[debug] Load.apply: Def.make(settings)... took 62.629101ms
[debug] Load.apply: structureIndex took 30.1611ms
[debug] Load.apply: mkStreams took 0.0051ms
[info] set current project to untitled3 (in build file:/C:/Users/yjasw/PycharmProjects/Scala-learnings/untitled3/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54071 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54071, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled3 (in build file:/C:/Users/yjasw/PycharmProjects/Scala-learnings/untitled3/)
[debug] > Exec(idea-shell, None, None)
